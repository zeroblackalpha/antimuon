name: Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    name: Build - ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          architecture: x64
          check-latest: true
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install Node dependencies
        run: npm ci
        working-directory: frontend
      - name: Test frontend
        run: npm run build
        working-directory: frontend
      #- run: npm test
      - name: Install webview dependencies
        run: sudo apt update && sudo apt install libgtk-3-dev libwebkit2gtk-4.0-dev
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Test backend
        run: go test ./...
      - name: Run Wails
        run: wails build -platform linux/amd64,linux/arm64
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Run Wails
        run: wails build -platform darwin/amd64,darwin/arm64
        if: ${{ matrix.os == 'macos-latest' }}
      - name: Run Wails
        run: wails build -platform windows/amd64,windows/arm64
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: antimuon-${{ matrix.os }}
          path: build/bin
